name: Go CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]

jobs:
  test:
    name: Test (Go ${{ matrix.go-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ["1.24.x"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run unit tests
        run: go test -timeout 10s ./...

  coverage:
    name: Coverage Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"

      - name: Run tests with coverage
        run: go test -timeout 10s -coverprofile=coverage.out ./...

      - name: Check coverage threshold (85%)
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total: | awk '{print $3}' | sed 's/%//')
          echo "Total coverage: ${COVERAGE}%"
          if awk -v cov="$COVERAGE" 'BEGIN { exit !(cov >= 85) }'; then
            echo "Coverage is sufficient (${COVERAGE}%)."
          else
            echo "Error: Coverage is below 85% threshold (${COVERAGE}%)."
            exit 1
          fi

  build:
    name: Build (Go ${{ matrix.go-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ["1.24.x"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build demo applications
        run: go build ./cmd/...
